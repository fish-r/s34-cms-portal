import mongoose from 'mongoose';

/**
 * Interfaces
 */

export interface Trainee {
  firstName: string;
  lastName: string;
  age: number;
  createdAt?: Date;
  lastUpdatedAt?: Date;
  learningStyle: LearningStyle;
  learningStage: LearningStage;
}

export interface LearningStyle {
  accommodating: number;
  diverging: number;
  assimilating: number;
  converging: number;
}

export interface LearningStage {
  experience: number;
  observation: number;
  conceptualisation: number;
  experimentation: number;
}

/**
 * Samples
 */
// TODO: removed when done testing
export const sampleTrainee1: Trainee = {
  firstName: 'Yufan',
  lastName: 'Test',
  age: 24,
  learningStage: {
    conceptualisation: 0.4,
    experience: 0,
    observation: 0,
    experimentation: 0,
  },
  learningStyle: {
    accommodating: 0.4,
    assimilating: 0.1,
    converging: 0.3,
    diverging: 0.4,
  },
};

export const LearningStyleSchema = new mongoose.Schema({
  accommodating: { type: Number, required: true },
  diverging: { type: Number, required: true },
  assimilating: { type: Number, required: true },
  converging: { type: Number, required: true },
});

export const LearningStageSchema = new mongoose.Schema({
  experience: { type: Number, required: true },
  observation: { type: Number, required: true },
  conceptualisation: { type: Number, required: true },
  experimentation: { type: Number, required: true },
});

/**
 * Trainee Schema for creating a MongoDB Document
 * @param ownerId String: Id of user who uploaded the content
 * @param filename String: Name of uploaded file [Must be unique]
 * @param createdAt Date: Date inserted into MongoDB
 * @param lastUpdatedAt Date: Date of last update in MongoDB
 * @param processingStartedAt Date: Date which is sent to model to generate questions
 * @param processingEndedAt Date: Date when questions are generated
 * @param isProcessed Boolean: If questions have been generated
 * @param s3Key String: Key of object saved in Amazon S3 [Must be unique]
 * @param questions Question[]: Questions generated by the Model
 * @param classifiedRoles String[]: Roles that have been classified from the content
 */
export const TraineeSchema = new mongoose.Schema({
  firstName: { type: String, required: true },
  lastName: { type: String, required: true, unique: true },
  age: { type: Number, required: true },
  createdAt: { type: Date, required: false },
  lastUpdatedAt: { type: Date, required: false },
  learningStyle: { type: LearningStyleSchema, required: true },
  learningStage: { type: LearningStageSchema, required: true },
});
